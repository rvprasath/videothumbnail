package com.videoDecoder.joinImage;

import com.videoDecoder.createVideoFrame.CreateImageFrame;
import com.videoDecoder.createVideoFrame.FrameData;

/**
 * <code>ImageJoiner</code> interface contains abstract method which generates
 * merged image from a list of image frames which is generated by
 * <code>{@link CreateImageFrame}</code> along with the return values from
 * <code>CreateImageFrame</code>
 * 
 * @author Vishnu Prasath
 *
 */
public interface ImageJoiner {

	/**
	 * Generates merged images from the list of image frames by passing
	 * <code>FrameData</code> which is the return value of the
	 * <code>CreateImageFrame</code> that contains the meta information of the
	 * decoded files.
	 * 
	 * @param frameData
	 * @return int
	 */
	public ImageJoinData generateMergedImage(FrameData frameData);

	/**
	 * Generates merged images from the list of image frames by passing
	 * <code>FrameData</code> which is the return value of the
	 * <code>CreateImageFrame</code> that contains the meta information of the
	 * decoded files. Along with the parameter the custom values for
	 * <code>column</code>, <code>row</code>, <code>height</code>,
	 * <code>width</code> for the the image to be generated.
	 * 
	 * The <code>column</code> describes number of image to be merged in
	 * horizontal manner and <code>row</code> describes number of images to be
	 * merged in vertical manner. The <code>height</code> and <code>width</code>
	 * specifies the height and width of each images inside the image container
	 * 
	 * @param frameData
	 * @param column
	 * @param row
	 * @param height
	 * @param width
	 * @return int
	 */
	public ImageJoinData generateMergedImage(FrameData frameData, int column, int row, int height, int width);

}
